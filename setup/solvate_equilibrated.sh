#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # the directory where this script is located.

# To get this going, all you need is an equilibrated configuration (produce using equil.sh)

GRO="wiggle.gro"  # initial dry equilibrated configuration
n=1038  # number of water molecules to insert
t=1000 # picoseconds of simulation time between insertions
p=0.6  # probability of finding a water molecule in the pore vs. tail region. e.g. 3:2 ratio corresponds to p = 0.6
emsteps=50  # number of steps to take during energy minimization directly after adding water
MPI=0  # set to 1 if you are running MPI
proc=4 # number of processes
python='python3'
continue=0
equil_time=400000  # time to equilibrate after solvation (ps)

while getopts "g:t:n:e:m:p:r:c:q:" opt; do
    case $opt in
        g) GRO=$OPTARG;;
        t) t=$OPTARG;;
        n) n=$OPTARG;;
        e) emsteps=$OPTARG;;
        m) MPI=$OPTARG;;
        p) p=$OPTARG;;
        r) proc=$OPTARG;;
        c) continue=$OPTARG;;
        q) equil_time=$OPTARG;;
    esac
done

if [[ ${MPI} -eq 1 ]]; then
    GMX="mpirun -np ${proc} gmx_mpi"
else
    GMX="gmx"
fi

if [[ ${continue} -eq 1 ]]; then
    top=$(tail topol.top -n 1)
    set $top
    start=$2
    start=$((start + 1))
else
    start=1
    # generate topology to be modified
    ${python} ${DIR}/input.py -c ${GRO}

    cp ${GRO} npt.gro
    mv topol.top topol_dry.top
fi

for i in $(seq ${start} ${n}); do

    echo "Adding water molecule # ${i}"
    # place water molecule in structure
    ${python} ${DIR}/solvate_equilibrated.py -g npt.gro -t topol_dry.top -p ${p} --emsteps ${emsteps}

    # create run files. Use berendsen barostat since the system was minimized and new molecules have been added
    ${python} ${DIR}/input.py -S -l ${t} -f 5 --barostat berendsen --genvel 'yes' -c em.gro

    # run simulation. top_intermediate.top was generated by solvate_equilibrated.py
    ${GMX} grompp -f npt.mdp -p top_intermediate -c em.gro -o npt > /dev/null 2>&1
    ${GMX} mdrun -v -deffnm npt

done

${python} ${DIR}/input.py -S -l 5000 -f 50 --barostat berendsen --genvel 'no', -c npt.gro
${GMX} grompp -f npt.mdp -p topol.top -c npt.gro -o berendsen
${GMX} mdrun -v -deffnm berendsen

${python} ${DIR}/input.py -S -l ${equil_time} -f 1000 --barostat Parrinello-Rahman --genvel 'no', -c berendsen.gro
${GMX} grompp -f npt.mdp -p topol.top -c berendsen.gro -o PR
${GMX} mdrun -v -deffnm PR
